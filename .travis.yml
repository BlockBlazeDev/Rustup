sudo: required
dist: trusty
services:
  - docker

matrix:
  include:
    # Linux builds use the `rust-slave-dist` image so we link them against a
    # "super old glibc" to ensure that it runs on as many platforms as possible.
    - os: linux
      env: TARGET=i686-unknown-linux-gnu
           DOCKER=alexcrichton/rust-slave-dist:2015-10-20b
    - os: linux
      env: TARGET=x86_64-unknown-linux-gnu
           DOCKER=alexcrichton/rust-slave-dist:2015-10-20b

    # Cross builds happen in the `rust-slave-linux-cross` image to ensure that
    # we use the right cross compilers for these targets. That image should
    # bundle all the gcc cross compilers to enable us to build OpenSSL
    - os: linux
      env: TARGET=arm-unknown-linux-gnueabi
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=arm-unknown-linux-gnueabihf
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=armv7-unknown-linux-gnueabihf
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=aarch64-unknown-linux-gnu
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=x86_64-unknown-freebsd
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=x86_64-unknown-netbsd
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=powerpc-unknown-linux-gnu
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=powerpc64-unknown-linux-gnu
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=powerpc64le-unknown-linux-gnu
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=mips-unknown-linux-gnu
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=mipsel-unknown-linux-gnu
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=mips64-unknown-linux-gnuabi64
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=mips64el-unknown-linux-gnuabi64
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1
    - os: linux
      env: TARGET=s390x-unknown-linux-gnu
           DOCKER=alexcrichton/rust-slave-linux-cross:2016-11-11
           SKIP_TESTS=1

    # Android use a local docker image
    - os: linux
      env: TARGET=arm-linux-androideabi
           DOCKER=android
           SKIP_TESTS=1
    - os: linux
      env: TARGET=armv7-linux-androideabi
           DOCKER=android
           SKIP_TESTS=1
    - os: linux
      env: TARGET=aarch64-linux-android
           DOCKER=android
           SKIP_TESTS=1
    - os: linux
      env: TARGET=i686-linux-android
           DOCKER=android
           SKIP_TESTS=1

    # On OSX we want to target 10.7 so we ensure that the appropriate
    # environment variable is set to tell the linker what we want.
    - os: osx
      env: TARGET=i686-apple-darwin
           MACOSX_DEPLOYMENT_TARGET=10.7
    - os: osx
      env: TARGET=x86_64-apple-darwin
           MACOSX_DEPLOYMENT_TARGET=10.7

branches:
  only:
    - master
    - stable
    - auto

notifications:
  webhooks: http://buildbot.rust-lang.org/homu/travis

install:
  - sudo pip install awscli
  - aws configure set preview.cloudfront true
  - curl https://static.rust-lang.org/rustup.sh |
    sh -s -- --prefix=$HOME/rust --spec=nightly-2016-11-06 --with-target=$TARGET

script:
  - mkdir target
  - if [ ! -z "$DOCKER" ]; then
      sh ci/build-run-docker.sh "$DOCKER" "$TARGET" "$SKIP_TESTS";
    else
      PATH=$HOME/rust/bin:$PATH sh ci/run.sh;
    fi
  # Install kcov dependencies
  # FIXME: busted!
  #- if [ "$TARGET" == "x86_64-unknown-linux-gnu" ]; then
  #    wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz;
  #    tar xzf master.tar.gz && mkdir kcov-master/build && cd kcov-master/build && cmake .. && make;
  #    sudo make install && cd ../..;
  #    echo "Uploading coverage... $TRAVIS_JOB_ID";
  #    find target/debug/deps/*-* -executable -exec kcov --verify --coveralls-id=$TRAVIS_JOB_ID --exclude-pattern=/.cargo target/kcov '{}' \;;
  #    find target/debug/*-* -executable ! -name multirust-rs -exec kcov --verify --coveralls-id=$TRAVIS_JOB_ID --exclude-pattern=/.cargo target/kcov '{}' \;;
  #  fi
  # prepare for a deploy if this will be a deployment
  - bash ci/prepare-deploy-travis.sh

deploy:
  - provider: s3
    bucket: dev-static-rust-lang-org
    skip_cleanup: true
    local_dir: deploy
    upload_dir: rustup
    acl: public_read
    region: us-west-1
    access_key_id: AKIAIZT5ZFS5N2VNRGPA
    secret_access_key:
      secure: "CGFWEhkk6siQxW24zJqlXRC4WLQPqXRJ5Rqa6rQNErotorRUn0DnPB+4zYW4KvMTDkv5pPwEv8P6b0IwbY8ZrS7ChfZ6t89xTvuklxsb8PlMwaDXWqkP5cCBT4B/e1S81xSI7ptkQ7Te5bcVbPMVE3MuGYtzhgIaYu+RZMLHSteY2TGnHid7ErmZKmvGoRqootEHYRo4Pv2s2ydZaalzrt8I5uGQPzesJc2T8xWS8VcFAGJTy4p59h5d6Btlo2a5L3Oc8kMLDzsxzwBbrNXQjF7oLZw7g1uf1A7iBrJGsv61GCnggl4+gtEt/BFQ8mtknBLXv3kXBfvrj35YnHAZosZWufSOgsQ9HB7ELjVhRhGRFX2BNKH1Gm/qM0j7WenD3vhOCTzMW21xqEvgY7+KIvyb9XLla7du/0/rZnDoBnCbZNpBOU5NqOV0y6MN6NDL5g168N7M30BeEEcJjbLEXtUTlCp/6jzZj3frDezJNJypniqwRfacf0yKNykVsnpqpcPmQfvxk2I/1BjdukLM5WifAgTEy9IG2/PBUIWr5ikAlhpACxmuKrlExJpOmZRMRjjRjI8tw8bSKu00SbeYT6PO0xazP9oJYKtWi5vkvM9U4R7udeYHTJFAMkeASpOO4Ss6f+dXQzm7OWqFu07Ffm9zHh+WX95PXonlzauEQ1I="
    on:
      branch: stable

# FIXME: I don't know if this really works
after_deploy:
  - aws cloudfront create-invalidation --paths "rustup/$TARGET/* rustup/dev/$TARGET/* rustup/www/* rustup/dev/www/* rustup/* rustup/dev/*"
