matrix:
  include:
    - os: linux
      env: TARGET=i686-unknown-linux-gnu BITS=32 CFLAGS=-m32 CXXFLAGS=-m32
      dist: trusty
    - os: linux
      env: TARGET=x86_64-unknown-linux-gnu BITS=64
      dist: trusty
    - os: osx
      env: TARGET=i686-apple-darwin BITS=32 MACOSX_DEPLOYMENT_TARGET=10.7
    - os: osx
      env: TARGET=x86_64-apple-darwin BITS=64 MACOSX_DEPLOYMENT_TARGET=10.7

git:
  submodules: false

branches:
  only:
    - master
    - new

sudo: required
services:
  - docker

install:
  - sudo pip install awscli
  - aws configure set preview.cloudfront true
  # Set git user for pushing binaries
  - git config --global user.email "diggsey@googlemail.com"
  - git config --global user.name "Diggory Blake (via Travis CI)"
  - git config --global push.default simple
  # Download nightly rust
  - mkdir -p ~/rust
  - echo -e "\033[33;1mDownloading Rust\033[0m"
  - curl -sL https://static.rust-lang.org/dist/rust-nightly-$TARGET.tar.gz | tar --strip-components=1 -C ~/rust -xzf -
  # For linux, install required packages
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      if [ "$BITS" == "32" ]; then
        sudo dpkg --add-architecture i386;
        sudo apt-get update;
        sudo apt-get install -y
          libc6-dev:i386 libstdc++6:i386 zlib1g-dev:i386 libssl-dev:i386 pkg-config:i386
          gcc-4.8 cpp-4.8 gcc-4.8-multilib gcc-multilib;
      else
        sudo apt-get update;
        sudo apt-get install -y
          libcurl4-openssl-dev libelf-dev libdw-dev binutils-dev libiberty-dev;
      fi
    fi
  # Install nightly rust
  - echo -e "\033[33;1mInstalling Rust\033[0m"
  - sudo ~/rust/install.sh

script:
  # Run linux builds in a docker container to improve portability of the resulting binaries
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      docker run
        --entrypoint bash
        -u `id -u`:`id -g`
        -v /usr/local:/usr/local:ro
        -v `pwd`:/buildslave
        -v $HOME:/home/rustbuild
        -e HOME=/home/rustbuild
        -e LD_LIBRARY_PATH=/usr/local/lib
        -e OPENSSL_STATIC=1
        -e OPENSSL_LIB_DIR=/rustroot/cargo$BITS/lib
        -it alexcrichton/rust-slave-dist:2015-10-20b
        -c "cargo build --release --verbose && cargo test --release -p multirust-dist --verbose && cargo test --release --verbose" || exit 1;
    else
      cargo build --release --verbose || exit 1;
      cargo test --release -p multirust-dist --verbose || exit 1;
      cargo test --release --verbose || exit 1;
    fi

after_success:
  # Install kcov dependencies
  - if [ "$TARGET" == "x86_64-unknown-linux-gnu" ]; then
      wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz;
      tar xzf master.tar.gz && mkdir kcov-master/build && cd kcov-master/build && cmake .. && make;
      sudo make install && cd ../..;
      echo "Uploading coverage... $TRAVIS_JOB_ID";
      find target/debug/deps/*-* -executable -exec kcov --verify --coveralls-id=$TRAVIS_JOB_ID --exclude-pattern=/.cargo target/kcov '{}' \;;
      find target/debug/*-* -executable ! -name multirust-rs -exec kcov --verify --coveralls-id=$TRAVIS_JOB_ID --exclude-pattern=/.cargo target/kcov '{}' \;;
    fi

before_deploy:
  - bash prepare-deploy-travis.sh

deploy:
  - provider: s3
    bucket: dev-static-rust-lang-org
    skip_cleanup: true
    local_dir: deploy
    upload_dir: rustup
    acl: public_read
    region: us-west-1
    access_key_id: AKIAIZT5ZFS5N2VNRGPA
    secret_access_key:
      secure: "CGFWEhkk6siQxW24zJqlXRC4WLQPqXRJ5Rqa6rQNErotorRUn0DnPB+4zYW4KvMTDkv5pPwEv8P6b0IwbY8ZrS7ChfZ6t89xTvuklxsb8PlMwaDXWqkP5cCBT4B/e1S81xSI7ptkQ7Te5bcVbPMVE3MuGYtzhgIaYu+RZMLHSteY2TGnHid7ErmZKmvGoRqootEHYRo4Pv2s2ydZaalzrt8I5uGQPzesJc2T8xWS8VcFAGJTy4p59h5d6Btlo2a5L3Oc8kMLDzsxzwBbrNXQjF7oLZw7g1uf1A7iBrJGsv61GCnggl4+gtEt/BFQ8mtknBLXv3kXBfvrj35YnHAZosZWufSOgsQ9HB7ELjVhRhGRFX2BNKH1Gm/qM0j7WenD3vhOCTzMW21xqEvgY7+KIvyb9XLla7du/0/rZnDoBnCbZNpBOU5NqOV0y6MN6NDL5g168N7M30BeEEcJjbLEXtUTlCp/6jzZj3frDezJNJypniqwRfacf0yKNykVsnpqpcPmQfvxk2I/1BjdukLM5WifAgTEy9IG2/PBUIWr5ikAlhpACxmuKrlExJpOmZRMRjjRjI8tw8bSKu00SbeYT6PO0xazP9oJYKtWi5vkvM9U4R7udeYHTJFAMkeASpOO4Ss6f+dXQzm7OWqFu07Ffm9zHh+WX95PXonlzauEQ1I="
    on:
      branch: master

  - provider: s3
    bucket: static-rust-lang-org
    skip_cleanup: true
    local_dir: deploy
    upload_dir: rustup
    acl: public_read
    region: us-west-1
    access_key_id: AKIAIZT5ZFS5N2VNRGPA
    secret_access_key:
      secure: "CGFWEhkk6siQxW24zJqlXRC4WLQPqXRJ5Rqa6rQNErotorRUn0DnPB+4zYW4KvMTDkv5pPwEv8P6b0IwbY8ZrS7ChfZ6t89xTvuklxsb8PlMwaDXWqkP5cCBT4B/e1S81xSI7ptkQ7Te5bcVbPMVE3MuGYtzhgIaYu+RZMLHSteY2TGnHid7ErmZKmvGoRqootEHYRo4Pv2s2ydZaalzrt8I5uGQPzesJc2T8xWS8VcFAGJTy4p59h5d6Btlo2a5L3Oc8kMLDzsxzwBbrNXQjF7oLZw7g1uf1A7iBrJGsv61GCnggl4+gtEt/BFQ8mtknBLXv3kXBfvrj35YnHAZosZWufSOgsQ9HB7ELjVhRhGRFX2BNKH1Gm/qM0j7WenD3vhOCTzMW21xqEvgY7+KIvyb9XLla7du/0/rZnDoBnCbZNpBOU5NqOV0y6MN6NDL5g168N7M30BeEEcJjbLEXtUTlCp/6jzZj3frDezJNJypniqwRfacf0yKNykVsnpqpcPmQfvxk2I/1BjdukLM5WifAgTEy9IG2/PBUIWr5ikAlhpACxmuKrlExJpOmZRMRjjRjI8tw8bSKu00SbeYT6PO0xazP9oJYKtWi5vkvM9U4R7udeYHTJFAMkeASpOO4Ss6f+dXQzm7OWqFu07Ffm9zHh+WX95PXonlzauEQ1I="
    on:
     branch: stable

# FIXME: I don't know if this really works
after_deploy:
  - aws cloudfront create-invalidation --paths "rustup/$TARGET/* rustup/dev/$TARGET/* rustup/www/* rustup/dev/www/* rustup/* rustup/dev/*"
