# This is ci/actions-templates/windows-builds-template.yaml
# Do not edit this file in .github/workflows

name: Windows (stable) # skip-master skip-pr

on:
  push:         # skip-pr
    branches:   # skip-pr
      - stable  # skip-pr skip-master

jobs:
  build:
    name: Build
    runs-on: windows-latest
    env:
      RUSTFLAGS: -Ctarget-feature=+crt-static
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - i686-pc-windows-msvc # skip-pr skip-master
          - x86_64-pc-windows-gnu # skip-pr
          - i686-pc-windows-gnu # skip-pr skip-master
        include:
          - target: x86_64-pc-windows-gnu
            mingw: https://ci-mirrors.rust-lang.org/rustc/x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z
            mingwdir: mingw64
          - target: i686-pc-windows-gnu
            mingwdir: mingw32
            mingw: https://ci-mirrors.rust-lang.org/rustc/i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z
    steps:
      - uses: actions/checkout@v2
        # v2 defaults to a shallow checkout, but we need at least to the previous tag
        with:
          fetch-depth: 0
      - name: Acquire tags for the repo
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Display the current git status
        run: |
          git status
          git describe
      - name: Prep cargo dirs
        run: |
          New-Item "${env:USERPROFILE}\.cargo\registry" -ItemType Directory -Force
          New-Item "${env:USERPROFILE}\.cargo\git" -ItemType Directory -Force
        shell: powershell
      - name: Install mingw
        run: |
          # We retrieve mingw from the Rust CI buckets
          # Disable the download progress bar which can cause perf issues
          $ProgressPreference = "SilentlyContinue"
          Invoke-WebRequest ${{ matrix.mingw }} -OutFile mingw.7z
          7z x -y mingw.7z -oC:\msys64 | Out-Null
          del mingw.7z
          echo ::add-path::C:\msys64\usr\bin
          echo ::add-path::C:\msys64\${{ matrix.mingwdir }}\bin
        shell: powershell
        if: matrix.mingw != ''
      - name: Set environment variables appropriately for the build
        run: |
          echo "::add-path::%USERPROFILE%\.cargo\bin"
          echo "::set-env name=TARGET::${{matrix.target}}"
          echo "::set-env name=SKIP_TESTS::"
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-trimmed-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo git trees
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-gits-trimmed-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-static-crt-trimmed-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rustup using win.rustup.rs
        run: |
          # Disable the download progress bar which can cause perf issues
          $ProgressPreference = "SilentlyContinue"
          Invoke-WebRequest https://win.rustup.rs/ -OutFile rustup-init.exe
          .\rustup-init.exe -y --default-host=x86_64-pc-windows-msvc --profile=minimal
          del rustup-init.exe
        shell: powershell
      - name: Ensure stable toolchain is up to date
        # Remove `rust-docs` component since `rustup update` will remove and reinstall it
        # which is slower than just remove it first anyway.
        run: |
          rustup component remove rust-docs || echo "already removed"
          rustup update stable
        shell: bash
      - name: Install the target
        run: |
          rustup target install ${{ matrix.target }}
      - name: Run a full build
        run: |
          cargo build --release --target ${{ matrix.target }} --locked
          cargo run --release --target ${{ matrix.target }} --locked -- --dump-testament
      # The test sequence relies on the total set of test binaries not changing
      # because I have no idea how to script it.  TODO: Get someone to script it?
      # A script might be nicer, though these in theory could be made to run
      # independently, assuming the run above succeeded, allowing us to run
      # the full test suite rather than stop on first error, at least in PRs
      - name: Run download and bin tests
        run: |
          cargo test --release --target ${{ matrix.target }} -p download
          cargo test --release --target ${{ matrix.target }} --bin rustup-init
        if: env.SKIP_TESTS == ''
      - name: Run the lib and doc tests
        run: |
          cargo test --release --target ${{ matrix.target }} --lib --all
          cargo test --release --target ${{ matrix.target }} --doc --all
        if: env.SKIP_TESTS == ''
      - name: Run the cli-exact test
        run: |
          cargo test --release --target ${{ matrix.target }} --test cli-exact
        if: env.SKIP_TESTS == ''
      - name: Run the cli-inst-interactive test
        run: |
          cargo test --release --target ${{ matrix.target }} --test cli-inst-interactive
        if: env.SKIP_TESTS == ''
      - name: Run the cli-misc test
        run: |
          cargo test --release --target ${{ matrix.target }} --test cli-misc
        if: env.SKIP_TESTS == ''
      - name: Run the cli-rustup test
        run: |
          cargo test --release --target ${{ matrix.target }} --test cli-rustup
        if: env.SKIP_TESTS == ''
      - name: Run the cli-self-upd test
        run: |
          cargo test --release --target ${{ matrix.target }} --test cli-self-upd
        if: env.SKIP_TESTS == ''
      - name: Run the cli-v1 test
        run: |
          cargo test --release --target ${{ matrix.target }} --test cli-v1
        if: env.SKIP_TESTS == ''
      - name: Run the cli-v2 test
        run: |
          cargo test --release --target ${{ matrix.target }} --test cli-v2
        if: env.SKIP_TESTS == ''
      - name: Run the dist_install test
        run: |
          cargo test --release --target ${{ matrix.target }} --test dist_install
        if: env.SKIP_TESTS == ''
      - name: Run the dist_manifest test
        run: |
          cargo test --release --target ${{ matrix.target }} --test dist_manifest
        if: env.SKIP_TESTS == ''
      - name: Run the dist test
        run: |
          cargo test --release --target ${{ matrix.target }} --test dist -- --test-threads 1
        if: env.SKIP_TESTS == ''
      - name: Run the dist_transactions test
        run: |
          cargo test --release --target ${{ matrix.target }} --test dist_transactions
        if: env.SKIP_TESTS == ''
      - name: Acquire the AWS tooling
        run: |
          pip3 install awscli
        if: github.event_name == 'push' && github.ref == 'refs/heads/stable'
      - name: Prepare the dist
        run: |
          .\ci\prepare-deploy.ps1
        shell: powershell
        if: github.event_name == 'push' && github.ref == 'refs/heads/stable'
      - name: Deploy build to dev-static dist tree for release team
        run: |
          aws s3 cp --recursive dist s3://dev-static-rust-lang-org/rustup/dist
        shell: powershell
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: github.event_name == 'push' && github.ref == 'refs/heads/stable'
      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean
          cargo-cache
